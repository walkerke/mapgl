% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/deck_layers.R
\name{add_deck_scatterplot_layer}
\alias{add_deck_scatterplot_layer}
\title{Add a deck.gl ScatterplotLayer to a map}
\usage{
add_deck_scatterplot_layer(
  map,
  id,
  source,
  lng = "lng",
  lat = "lat",
  radius = 100,
  radius_units = "meters",
  radius_scale = 1,
  radius_min_pixels = 0,
  radius_max_pixels = NULL,
  fill_color = c(255, 0, 0, 255),
  line_color = c(0, 0, 0, 255),
  line_width = 1,
  line_width_units = "meters",
  line_width_scale = 1,
  line_width_min_pixels = 0,
  line_width_max_pixels = NULL,
  stroked = FALSE,
  filled = TRUE,
  billboard = FALSE,
  antialiasing = TRUE,
  before_id = NULL
)
}
\arguments{
\item{map}{A map object created by the \code{mapboxgl()} or \code{maplibre()} functions.}

\item{id}{A unique ID for the layer.}

\item{source}{An sf object with POINT geometry, or a data frame with longitude and latitude columns.}

\item{lng}{Column name for longitude coordinates (if source is a data frame). Default is "lng".}

\item{lat}{Column name for latitude coordinates (if source is a data frame). Default is "lat".}

\item{radius}{Radius of each point in the specified units. Default is 100.}

\item{radius_units}{Units for the radius: 'meters' (default), 'common', or 'pixels'.}

\item{radius_scale}{Global radius multiplier. Default is 1.}

\item{radius_min_pixels}{Minimum radius in pixels. Default is 0.}

\item{radius_max_pixels}{Maximum radius in pixels. Default is Number.MAX_SAFE_INTEGER.}

\item{fill_color}{Fill color for points as an RGBA vector c(r, g, b, a) where values are 0-255. Default is c(255, 0, 0, 255).}

\item{line_color}{Line color for point outlines as an RGBA vector. Default is c(0, 0, 0, 255).}

\item{line_width}{Width of point outlines. Default is 1.}

\item{line_width_units}{Units for line width: 'meters' (default), 'common', or 'pixels'.}

\item{line_width_scale}{Global line width multiplier. Default is 1.}

\item{line_width_min_pixels}{Minimum line width in pixels. Default is 0.}

\item{line_width_max_pixels}{Maximum line width in pixels. Default is Number.MAX_SAFE_INTEGER.}

\item{stroked}{Whether to draw an outline around points. Default is FALSE.}

\item{filled}{Whether to fill the points. Default is TRUE.}

\item{billboard}{Whether points face the camera (TRUE) or lie flat on the ground (FALSE). Default is FALSE.}

\item{antialiasing}{Whether to use antialiasing. Default is TRUE.}

\item{before_id}{The ID of an existing layer to insert this layer before (for layer ordering).}
}
\value{
The modified map object with the deck.gl layer added.
}
\description{
This function adds a deck.gl ScatterplotLayer to either a Mapbox GL or MapLibre GL map.
deck.gl layers are WebGL-powered visualizations that can handle large datasets efficiently.
The ScatterplotLayer renders circles at specified coordinates with configurable styling.
}
\examples{
\dontrun{
library(mapgl)
library(sf)

# Create sample point data
points <- data.frame(
  lng = c(-122.45, -122.46, -122.47),
  lat = c(37.78, 37.79, 37.80),
  name = c("Point 1", "Point 2", "Point 3")
)

# Add deck.gl scatterplot layer to MapLibre map
maplibre(
  style = carto_style("positron"),
  center = c(-122.46, 37.79),
  zoom = 12
) \%>\%
  add_deck_scatterplot_layer(
    id = "points",
    source = points,
    radius = 500,
    fill_color = c(255, 100, 100, 200),
    stroked = TRUE,
    line_color = c(0, 0, 0, 255),
    line_width = 2
  )

# Using sf object
points_sf <- st_as_sf(points, coords = c("lng", "lat"), crs = 4326)

mapboxgl(
  style = mapbox_style("light"),
  center = c(-122.46, 37.79),
  zoom = 12
) \%>\%
  add_deck_scatterplot_layer(
    id = "points-sf",
    source = points_sf,
    radius = 300,
    radius_units = "meters",
    fill_color = c(100, 149, 237, 200)
  )
}
}
